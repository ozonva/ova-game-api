// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozonva/ova-game-api/internal/repo (interfaces: HeroRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	game "github.com/ozonva/ova-game-api/pkg/game"
)

// MockHeroRepo is a mock of HeroRepo interface.
type MockHeroRepo struct {
	ctrl     *gomock.Controller
	recorder *MockHeroRepoMockRecorder
}

// MockHeroRepoMockRecorder is the mock recorder for MockHeroRepo.
type MockHeroRepoMockRecorder struct {
	mock *MockHeroRepo
}

// NewMockHeroRepo creates a new mock instance.
func NewMockHeroRepo(ctrl *gomock.Controller) *MockHeroRepo {
	mock := &MockHeroRepo{ctrl: ctrl}
	mock.recorder = &MockHeroRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHeroRepo) EXPECT() *MockHeroRepoMockRecorder {
	return m.recorder
}

// AddHeroes mocks base method.
func (m *MockHeroRepo) AddHeroes(arg0 []game.Hero) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddHeroes", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddHeroes indicates an expected call of AddHeroes.
func (mr *MockHeroRepoMockRecorder) AddHeroes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddHeroes", reflect.TypeOf((*MockHeroRepo)(nil).AddHeroes), arg0)
}

// DescribeHero mocks base method.
func (m *MockHeroRepo) DescribeHero(arg0 uuid.UUID) (*game.Hero, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeHero", arg0)
	ret0, _ := ret[0].(*game.Hero)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeHero indicates an expected call of DescribeHero.
func (mr *MockHeroRepoMockRecorder) DescribeHero(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeHero", reflect.TypeOf((*MockHeroRepo)(nil).DescribeHero), arg0)
}

// ListHeroes mocks base method.
func (m *MockHeroRepo) ListHeroes(arg0, arg1 uint64) ([]game.Hero, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHeroes", arg0, arg1)
	ret0, _ := ret[0].([]game.Hero)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHeroes indicates an expected call of ListHeroes.
func (mr *MockHeroRepoMockRecorder) ListHeroes(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHeroes", reflect.TypeOf((*MockHeroRepo)(nil).ListHeroes), arg0, arg1)
}

// RemoveHero mocks base method.
func (m *MockHeroRepo) RemoveHero(arg0 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveHero", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveHero indicates an expected call of RemoveHero.
func (mr *MockHeroRepoMockRecorder) RemoveHero(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveHero", reflect.TypeOf((*MockHeroRepo)(nil).RemoveHero), arg0)
}
